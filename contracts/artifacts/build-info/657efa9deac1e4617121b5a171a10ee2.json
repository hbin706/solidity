{
	"id": "657efa9deac1e4617121b5a171a10ee2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/10IfAndElse.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\ncontract IfElse {\n    function foo(uint256 x) public pure returns (uint256) {\n        if (x < 10) {\n            return 0;\n        } else if (x < 20) {\n            return 1;\n        } else {\n            return 2;\n        }\n    }\n\n    function ternary(uint256 _x) public pure returns (uint256) {\n        // if (_x < 10) {\n        //     return 1;\n        // }\n        // return 2;\n\n        // shorthand way to write if / else statement\n        // the \"?\" operator is called the ternary operator\n        return _x < 10 ? 1 : 2;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/10IfAndElse.sol": {
				"IfElse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "foo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "ternary",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/10IfAndElse.sol\":58:590  contract IfElse {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/10IfAndElse.sol\":58:590  contract IfElse {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2fbebd38\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x55278c5b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/10IfAndElse.sol\":291:588  function ternary(uint256 _x) public pure returns (uint256) {... */\n    tag_4:\n      tag_5\n      tag_12\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_12:\n      tag_13\n      jump\t// in\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n    tag_8:\n        /* \"contracts/10IfAndElse.sol\":125:132  uint256 */\n      0x00\n        /* \"contracts/10IfAndElse.sol\":152:154  10 */\n      0x0a\n        /* \"contracts/10IfAndElse.sol\":148:149  x */\n      dup3\n        /* \"contracts/10IfAndElse.sol\":148:154  x < 10 */\n      lt\n        /* \"contracts/10IfAndElse.sol\":144:279  if (x < 10) {... */\n      iszero\n      tag_16\n      jumpi\n      pop\n        /* \"contracts/10IfAndElse.sol\":177:178  0 */\n      0x00\n      swap2\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/10IfAndElse.sol\":144:279  if (x < 10) {... */\n    tag_16:\n        /* \"contracts/10IfAndElse.sol\":203:205  20 */\n      0x14\n        /* \"contracts/10IfAndElse.sol\":199:200  x */\n      dup3\n        /* \"contracts/10IfAndElse.sol\":199:205  x < 20 */\n      lt\n        /* \"contracts/10IfAndElse.sol\":195:279  if (x < 20) {... */\n      iszero\n      tag_18\n      jumpi\n      pop\n        /* \"contracts/10IfAndElse.sol\":228:229  1 */\n      0x01\n      swap2\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/10IfAndElse.sol\":195:279  if (x < 20) {... */\n    tag_18:\n      pop\n        /* \"contracts/10IfAndElse.sol\":267:268  2 */\n      0x02\n      swap2\n        /* \"contracts/10IfAndElse.sol\":80:285  function foo(uint256 x) public pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/10IfAndElse.sol\":291:588  function ternary(uint256 _x) public pure returns (uint256) {... */\n    tag_13:\n        /* \"contracts/10IfAndElse.sol\":341:348  uint256 */\n      0x00\n        /* \"contracts/10IfAndElse.sol\":571:573  10 */\n      0x0a\n        /* \"contracts/10IfAndElse.sol\":566:568  _x */\n      dup3\n        /* \"contracts/10IfAndElse.sol\":566:573  _x < 10 */\n      lt\n        /* \"contracts/10IfAndElse.sol\":566:581  _x < 10 ? 1 : 2 */\n      tag_21\n      jumpi\n        /* \"contracts/10IfAndElse.sol\":580:581  2 */\n      0x02\n        /* \"contracts/10IfAndElse.sol\":566:581  _x < 10 ? 1 : 2 */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/10IfAndElse.sol\":576:577  1 */\n      0x01\n        /* \"contracts/10IfAndElse.sol\":566:581  _x < 10 ? 1 : 2 */\n    tag_22:\n        /* \"contracts/10IfAndElse.sol\":559:581  return _x < 10 ? 1 : 2 */\n      0xff\n      and\n      swap3\n        /* \"contracts/10IfAndElse.sol\":291:588  function ternary(uint256 _x) public pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_7:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_25:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f294a1e69d4a2e2154ac448d04db981ccda6267ab7b0c77e280325787f82117764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5060f28061001b5f395ff3fe6080604052348015600e575f80fd5b50600436106030575f3560e01c80632fbebd3814603457806355278c5b146055575b5f80fd5b6043603f36600460a6565b6064565b60405190815260200160405180910390f35b6043606036600460a6565b608c565b5f600a821015607457505f919050565b6014821015608457506001919050565b506002919050565b5f600a8210609a576002609d565b60015b60ff1692915050565b5f6020828403121560b5575f80fd5b503591905056fea2646970667358221220f294a1e69d4a2e2154ac448d04db981ccda6267ab7b0c77e280325787f82117764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF2 DUP1 PUSH2 0x1B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH1 0x55 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xA6 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x43 PUSH1 0x60 CALLDATASIZE PUSH1 0x4 PUSH1 0xA6 JUMP JUMPDEST PUSH1 0x8C JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x74 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x84 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT PUSH1 0x9A JUMPI PUSH1 0x2 PUSH1 0x9D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SWAP5 LOG1 0xE6 SWAP14 BLOBBASEFEE 0x2E 0x21 SLOAD 0xAC PREVRANDAO DUP14 DIV 0xDB SWAP9 SHR 0xCD 0xA6 0x26 PUSH27 0xB7B0C77E280325787F82117764736F6C634300081A003300000000 ",
							"sourceMap": "58:532:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@foo_26": {
									"entryPoint": 100,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ternary_41": {
									"entryPoint": 140,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:378:1",
										"nodeType": "YulBlock",
										"src": "0:378:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:1",
													"nodeType": "YulBlock",
													"src": "84:110:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:33:1",
															"nodeType": "YulAssignment",
															"src": "155:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nativeSrc": "165:23:1",
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:180:1"
											},
											{
												"body": {
													"nativeSrc": "300:76:1",
													"nodeType": "YulBlock",
													"src": "300:76:1",
													"statements": [
														{
															"nativeSrc": "310:26:1",
															"nodeType": "YulAssignment",
															"src": "310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:1"
																},
																"nativeSrc": "318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:1"
																},
																"nativeSrc": "345:25:1",
																"nodeType": "YulFunctionCall",
																"src": "345:25:1"
															},
															"nativeSrc": "345:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "345:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "199:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:1",
														"nodeType": "YulTypedName",
														"src": "269:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:1",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:1",
														"nodeType": "YulTypedName",
														"src": "291:4:1",
														"type": ""
													}
												],
												"src": "199:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50600436106030575f3560e01c80632fbebd3814603457806355278c5b146055575b5f80fd5b6043603f36600460a6565b6064565b60405190815260200160405180910390f35b6043606036600460a6565b608c565b5f600a821015607457505f919050565b6014821015608457506001919050565b506002919050565b5f600a8210609a576002609d565b60015b60ff1692915050565b5f6020828403121560b5575f80fd5b503591905056fea2646970667358221220f294a1e69d4a2e2154ac448d04db981ccda6267ab7b0c77e280325787f82117764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x30 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2FBEBD38 EQ PUSH1 0x34 JUMPI DUP1 PUSH4 0x55278C5B EQ PUSH1 0x55 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x43 PUSH1 0x3F CALLDATASIZE PUSH1 0x4 PUSH1 0xA6 JUMP JUMPDEST PUSH1 0x64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x43 PUSH1 0x60 CALLDATASIZE PUSH1 0x4 PUSH1 0xA6 JUMP JUMPDEST PUSH1 0x8C JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT ISZERO PUSH1 0x74 JUMPI POP PUSH0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x14 DUP3 LT ISZERO PUSH1 0x84 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x2 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP3 LT PUSH1 0x9A JUMPI PUSH1 0x2 PUSH1 0x9D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SWAP5 LOG1 0xE6 SWAP14 BLOBBASEFEE 0x2E 0x21 SLOAD 0xAC PREVRANDAO DUP14 DIV 0xDB SWAP9 SHR 0xCD 0xA6 0x26 PUSH27 0xB7B0C77E280325787F82117764736F6C634300081A003300000000 ",
							"sourceMap": "58:532:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:205;;;;;;:::i;:::-;;:::i;:::-;;;345:25:1;;;333:2;318:18;80:205:0;;;;;;;291:297;;;;;;:::i;:::-;;:::i;80:205::-;125:7;152:2;148:1;:6;144:135;;;-1:-1:-1;177:1:0;;80:205;-1:-1:-1;80:205:0:o;144:135::-;203:2;199:1;:6;195:84;;;-1:-1:-1;228:1:0;;80:205;-1:-1:-1;80:205:0:o;195:84::-;-1:-1:-1;267:1:0;;80:205;-1:-1:-1;80:205:0:o;291:297::-;341:7;571:2;566;:7;:15;;580:1;566:15;;;576:1;566:15;559:22;;;291:297;-1:-1:-1;;291:297:0:o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "48400",
								"executionCost": "97",
								"totalCost": "48497"
							},
							"external": {
								"foo(uint256)": "309",
								"ternary(uint256)": "319"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 590,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 590,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f294a1e69d4a2e2154ac448d04db981ccda6267ab7b0c77e280325787f82117764736f6c634300081a0033",
									".code": [
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "2FBEBD38"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "55278C5B"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 590,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 80,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 80,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 291,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 125,
											"end": 132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 152,
											"end": 154,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 148,
											"end": 149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 148,
											"end": 154,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 144,
											"end": 279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 144,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 144,
											"end": 279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 80,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 144,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 144,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 203,
											"end": 205,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 200,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 199,
											"end": 205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 195,
											"end": 279,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 195,
											"end": 279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 228,
											"end": 229,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 228,
											"end": 229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 80,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 195,
											"end": 279,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 195,
											"end": 279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 267,
											"end": 268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 80,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 566,
											"end": 568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 566,
											"end": 573,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 566,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 566,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 559,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 559,
											"end": 581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 559,
											"end": 581,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 291,
											"end": 588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 291,
											"end": 588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/10IfAndElse.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"foo(uint256)": "2fbebd38",
							"ternary(uint256)": "55278c5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"foo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"ternary\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/10IfAndElse.sol\":\"IfElse\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/10IfAndElse.sol\":{\"keccak256\":\"0x974c5e704e7c3588a206c8f18975efeeb38cd338b58b1cfd0f2c78cb3c245805\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063b7c7ec98d3e189ac168e9f6129fb0233f514647a70fbfa28e1e644269602a\",\"dweb:/ipfs/QmecrVTTgpU8m8cj5rtqYefibJUPJfAcKjowWGagiDRnZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/10IfAndElse.sol": {
				"ast": {
					"absolutePath": "contracts/10IfAndElse.sol",
					"exportedSymbols": {
						"IfElse": [
							42
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IfElse",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "IfElse",
							"nameLocation": "67:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "134:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "152:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 14,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3230",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "203:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "199:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "246:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "32",
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "267:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "260:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "195:84:0",
													"trueBody": {
														"id": 19,
														"nodeType": "Block",
														"src": "207:33:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "31",
																	"id": 17,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"functionReturnParameters": 7,
																"id": 18,
																"nodeType": "Return",
																"src": "221:8:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "144:135:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "156:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "177:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "170:8:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2fbebd38",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "foo",
									"nameLocation": "89:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "101:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "93:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "93:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "92:11:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "125:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "124:9:0"
									},
									"scope": 42,
									"src": "80:205:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "350:238:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 33,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "566:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "3130",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "571:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "32",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "580:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "566:15:0",
													"trueExpression": {
														"hexValue": "31",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "576:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 32,
												"id": 39,
												"nodeType": "Return",
												"src": "559:22:0"
											}
										]
									},
									"functionSelector": "55278c5b",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "300:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_x",
												"nameLocation": "316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:12:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "340:9:0"
									},
									"scope": 42,
									"src": "291:297:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "58:532:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:558:0"
				},
				"id": 0
			}
		}
	}
}